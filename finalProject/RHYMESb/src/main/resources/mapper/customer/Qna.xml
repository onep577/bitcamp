<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Qna">
	<!-- qnalist -->
	<select id="getQnaList" parameterType="com.rhymes.app.customer.model.CustomerParam"  resultType="com.rhymes.app.customer.model.QnaDto">
       SELECT SEQ, ID, CATEGORY,REF,STEP,DEPTH,TITLE,CONTENT, WDATE, ORDERNO, FILENAME, FEEDBACK
      FROM (SELECT ROW_NUMBER()OVER(ORDER BY REF DESC, STEP ASC)AS RNUM,
					SEQ, ID, CATEGORY,REF,STEP,DEPTH,TITLE,CONTENT, WDATE, ORDERNO, FILENAME, FEEDBACK
					FROM QNA
					WHERE REF = ANY(SELECT REF FROM QNA ALIAS_FOR_SUBQUERY WHERE ID = #{id})
					)A 
			WHERE RNUM BETWEEN ${start} AND ${end}	
			ORDER BY REF DESC, STEP ASC
    </select>
    
    <select id="getQnaOrderList" parameterType="java.lang.String"  resultType="com.rhymes.app.customer.model.QnaOrderDto">
  			SELECT PAYMENT_CODE, USERID, COUNT, P_NAME, TOTALPRICE, RDATE
			FROM(
				SELECT  A.PAYMENT_CODE AS PAYMENT_CODE, A.USERID AS USERID, COUNT(*) AS COUNT, D.P_NAME AS P_NAME, A.TOTALPRICE AS TOTALPRICE, A.RDATE AS RDATE
				FROM RHY_PAYMENT A, (SELECT * FROM RHY_PAYMENT_DETAILS ORDER BY PRICE) B, RHY_STORE_STOCK C, RHY_STORE_PRODUCT D 
				WHERE A.PAYMENT_CODE = B.PAYMENT_CODE AND B.S_SEQ = C.STOCK_SEQ AND C.P_SEQ = D.P_SEQ AND A.USERID=#{id}
				GROUP BY A.PAYMENT_CODE
				ORDER BY B.PRICE DESC) AA
    </select>
    
	<select id="getQnaCount" parameterType="com.rhymes.app.customer.model.CustomerParam"
		resultType="java.lang.Integer">
		SELECT IFNULL(COUNT(*), 0)AS CNT
		FROM QNA
		WHERE ID = #{id} 
	</select>

	<!-- qna detail -->
    <select id="getQnaDetail" parameterType="java.lang.Integer" resultType="com.rhymes.app.customer.model.QnaDto">
       SELECT * 
       FROM QNA
       WHERE SEQ = #{seq} 
    </select>
    
    <!-- qna 올리기 -->
    <insert id="QnaUpload" parameterType="com.rhymes.app.customer.model.QnaDto">
	INSERT INTO QNA(ID, CATEGORY,REF,STEP,DEPTH,TITLE,CONTENT, WDATE, ORDERNO, FILENAME, FEEDBACK)
	VALUES(#{id}, #{category},(SELECT IFNULL(MAX(REF), 0)+1 FROM QNA ALIAS_FOR_SUBQUERY),0,0, #{title}, #{content}, NOW(), #{orderno}, #{filename}, 0)
	</insert>
	
	<!-- qna 수정 -->
    <update id="QnaUpdateAf" parameterType="com.rhymes.app.customer.model.QnaDto">
	UPDATE QNA
	SET CATEGORY=#{category}, TITLE=#{title}, CONTENT=#{content}, FILENAME=#{filename}
	WHERE SEQ=#{seq}
	</update>
	
	<!-- 파일명 -->
	<select id="QnaFilename" parameterType="java.lang.Integer" resultType="String">
	SELECT FILENAME 
	FROM QNA
	WHERE SEQ=#{seq}
	</select>
	
	<!-- qna 삭제 -->
	<delete id="QnaDelete" parameterType="java.lang.Integer">
	DELETE FROM QNA
	WHERE SEQ=#{seq}
	</delete>
	
	<!-- qna 부모글 자식글 삭제 -->
	<delete id="QnaParentDelete" parameterType="java.lang.Integer">
	DELETE FROM QNA
	WHERE REF=#{ref}
	</delete>
	
	
	
	
	
</mapper>
